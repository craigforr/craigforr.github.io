<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Tips on Craig Forrester</title>
    <link>https://www.craigforrester.com/categories/tips/</link>
    <description>Recent content in Tips on Craig Forrester</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-US</language>
    <lastBuildDate>Wed, 16 May 2018 17:00:00 -0400</lastBuildDate>
    
	<atom:link href="https://www.craigforrester.com/categories/tips/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>How to Create an Azure Service Principal with Limited Rights</title>
      <link>https://www.craigforrester.com/posts/how-to-create-an-azure-service-principal-with-limited-rights/</link>
      <pubDate>Wed, 16 May 2018 17:00:00 -0400</pubDate>
      
      <guid>https://www.craigforrester.com/posts/how-to-create-an-azure-service-principal-with-limited-rights/</guid>
      <description>Role-Based Least Privilege In some cases, we have operations teams or developers that need tools or applications to be able access to their Azure virtual machines, but they only need the ability to perform basic operations: starting, stopping, restarting, or deallocating VMs. In this case, we can assign them a service principal for a given role with rights to perform only those operations. This is referred to as &amp;ldquo;role based access control&amp;rdquo; or &amp;ldquo;RBAC&amp;rdquo; and is in keeping with the best practice of least-privilege.</description>
    </item>
    
    <item>
      <title>Convert Times Between Time Zones with PowerShell</title>
      <link>https://www.craigforrester.com/posts/convert-times-between-time-zones-with-powershell/</link>
      <pubDate>Wed, 25 Apr 2018 17:00:00 -0500</pubDate>
      
      <guid>https://www.craigforrester.com/posts/convert-times-between-time-zones-with-powershell/</guid>
      <description>Convert Time for different World Time Zone If you work in a multinational organization like me or you have loved ones or friends who live in other parts of the country or world, then you have, no doubt, found yourself needing to convert time from one time zone to another. In this post, I&amp;rsquo;m going to show you how to do this really easily in PowerShell.
TL;DR In a hurry?</description>
    </item>
    
    <item>
      <title>Display Dates and Times with PowerShell</title>
      <link>https://www.craigforrester.com/posts/display-dates-and-times-with-powershell/</link>
      <pubDate>Fri, 20 Apr 2018 00:00:00 -0500</pubDate>
      
      <guid>https://www.craigforrester.com/posts/display-dates-and-times-with-powershell/</guid>
      <description>In the course of any given week, I find myself having to determine dates and times for future and past days, weeks, months &amp;mdash; even years. PowerShell makes this extremely easy. In thise post, we&amp;rsquo;ll discuss how&amp;hellip;
Getting Dates and Times with PowerShell First let&amp;rsquo;s show how to get the current local time:
Get-Date  You can display a different date and time by specifying it after Get-Date (as an unnamed parameter):</description>
    </item>
    
    <item>
      <title>Windows Subsystem for Linux: Disable IPv6 for Apt</title>
      <link>https://www.craigforrester.com/posts/windows-subsystem-for-linux-disable-ipv6-for-apt/</link>
      <pubDate>Thu, 29 Mar 2018 08:00:00 -0500</pubDate>
      
      <guid>https://www.craigforrester.com/posts/windows-subsystem-for-linux-disable-ipv6-for-apt/</guid>
      <description>Apt Error &amp;ldquo;IN6_IS_ADDR_V4MAPPED&amp;rdquo; If you have IPv6 enabled on Windows 10 and attempt to use Apt in Ubuntu on the Windows Subsystem for Linux, you may get the following error:
http: ../sysdeps/posix/getaddrinfo.c:2603: getaddrinfo: Assertion `IN6_IS_ADDR_V4MAPPED (sin6-&amp;gt;sin6_addr.s6_addr32)&#39; failed. E: Method http has died unexpectedly! E: Sub-process http received signal 6.  There are a number of related issues filed on GitHub for this problem, and a whole lot of varied advice on how to solve it.</description>
    </item>
    
    <item>
      <title>Scripting Notebook: Create a File of a Specific Size</title>
      <link>https://www.craigforrester.com/posts/scripting-notebook-create-a-file-of-a-specific-size/</link>
      <pubDate>Thu, 01 Mar 2018 18:00:00 -0500</pubDate>
      
      <guid>https://www.craigforrester.com/posts/scripting-notebook-create-a-file-of-a-specific-size/</guid>
      <description>This is the first post in a series I&amp;rsquo;m calling &amp;ldquo;Scripting Notebook,&amp;rdquo; in which I will explore ways of accomplishing various scripting tasks across several languages: Bash, CMD, PowerShell, and Python.
Creating a File of Arbitrary Size Sometimes when you&amp;rsquo;re testing, for whatever reason, you need one or more files that are a particular size. You don&amp;rsquo;t care what they are, you just need some data to take up disk space, transfer over the network, etc.</description>
    </item>
    
    <item>
      <title>List Running Desktop Applications with PowerShell</title>
      <link>https://www.craigforrester.com/posts/powershell-list-running-desktop-apps/</link>
      <pubDate>Thu, 15 Feb 2018 19:00:00 -0500</pubDate>
      
      <guid>https://www.craigforrester.com/posts/powershell-list-running-desktop-apps/</guid>
      <description>Here&amp;rsquo;s a quick PowerShell tip&amp;hellip;
TL;DR Have you ever wanted to get a list of running desktop applications in PowerShell? Maybe you want to see what you have open but would rather not fumble around with Task Manager?
Here&amp;rsquo;s a one-liner to do just that:
gps | ? { $_.MainWindowTitle }  Sample output:
Handles NPM(K) PM(K) WS(K) CPU(s) Id SI ProcessName ------- ------ ----- ----- ------ -- -- ----------- 4269 188 382940 424100 1,336.</description>
    </item>
    
  </channel>
</rss>